snippet php
	<?php
	${1}
snippet vd
	var_dump(${1});exit;
snippet ve
	var_export(${1});exit;
snippet ec
	echo "${1:string}"${2};
snippet inc
	include '${1:file}';${2}
snippet inc1
	include_once '${1:file}';${2}
snippet req
	require '${1:file}';${2}
snippet req1
	require_once '${1:file}';${2}
# Start Docblock
snippet /*
	/**
	 * ${1}
	 */
# class ...
snippet class
	class ${1:ClassName}
	{
		
		${2:public }function ${3:__construct}(${4:argument})
		{
			${5:// code...}
		}
	}
# define(...)
snippet def
	define('${1}'${2});${3}
# defined(...)
snippet def?
	${1}defined('${2}')${3}
snippet wh
	while (${1:/* condition */}) {
		${2:// code...}
	}
# do ... while
snippet do
	do {
		${2:// code... }
	} while (${1:/* condition */});
snippet if
	if (${1:/* condition */}) {
		${2:// code...}
	}
snippet ife
	if (${1:/* condition */}) {
		${2:// code...}
	} else {
		${3:// code...}
	}
	${4}
snippet else
	else {
		${1:// code...}
	}
snippet elseif
	elseif (${1:/* condition */}) {
		${2:// code...}
	}
# Tertiary conditional
snippet t
	$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b};${5}
snippet switch
	switch ($${1:variable}) {
		case '${2:value}':
			${3:// code...}
			break;
		${5}
		default:
			${4:// code...}
			break;
	}
snippet case
	case '${1:value}':
		${2:// code...}
		break;${3}
snippet for
	for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {
		${4: // code...}
	}
snippet foreach
	foreach ($${1:variable} as $${2:key}) {
		${3:// code...}
	}
snippet fun
	${1:public }function ${2:FunctionName}(${3})
	{
		${4:// code...}
	}
# $... = array (...)
snippet arr
	array(
		'${1}' => ${2},
	);
snippet try
	try {
		${1}
	} catch (\Exception $e) {
		${2}
	}
# doctrine
snippet qb
	$qb = $this->createQueryBuilder('${1}');
	$${2:result} = $qb
		->where(
			${3}
		)
		->setParameters(
			array(
				'' => ,
			)
		)
		->join('', '')
		->groupBy('')
		->orderBy('', '')
		->getQuery()
		->getResult()
		;
snippet andX
	$qb->expr()->andX(
		${1}
	)
snippet orX
	$qb->expr()->orX(
		${1}
	)
snippet eq
	$qb->expr()->eq('${1}', '${2}')
# datetime
snippet ymd
	->format('Y-m-d')
snippet his
	->format('Y-m-d H:i:s')

snippet opc
	options={"comment"="${1}"}
